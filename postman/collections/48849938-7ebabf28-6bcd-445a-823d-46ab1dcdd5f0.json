{
	"info": {
		"_postman_id": "48849938-7ebabf28-6bcd-445a-823d-46ab1dcdd5f0",
		"name": "Reqres API Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bcee102b-4b13-4d6e-9de9-865dcc17bc7f",
						"exec": [
							"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));\r",
							"pm.test(\"Status message is Created\", () => pm.response.to.have.status(\"Created\"));\r",
							"pm.test(\"Response has name and job\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.name).to.eql(pm.variables.get(\"name\"));\r",
							"    pm.expect(res.job).to.eql(pm.variables.get(\"job\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f433be9a-dff8-44d4-833e-4afdfecb65b6",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-1d7eb481-9b2f-497b-99a8-7feb16393be6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{name}}\",\r\n  \"job\": \"{{job}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "956ca7b0-80ce-4d6e-9dd8-a6c46b779aee",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Status message is OK\", () => pm.response.to.have.status(\"OK\"));\r",
							"pm.test(\"Response has user data\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.data).to.have.property(\"id\", parseInt(pm.variables.get(\"user_id\")));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"id": "48849938-d864f71b-54e1-49d6-a234-cf6d3b66ad2f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d254d4f8-6091-427c-ae58-8fd3ecb16ec4",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Status message is OK\", () => pm.response.to.have.status(\"OK\"));\r",
							"pm.test(\"Contains users data\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.data.length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-27c09870-c58a-4a33-ab08-a7c3db12ed7b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users?page=2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Partial Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63689729-23d8-4119-b4fa-5d679a01f7cb",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response includes updated job\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.job).to.eql(\"Automation Tester\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-56c856b6-9b69-42ea-ac9b-7c2908027265",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"job\": \"Automation Tester\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Full Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b94db66c-d106-430c-8bc0-caf611473dfe",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response matches updated data\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.name).to.eql(\"Ewin Updated\");\r",
							"    pm.expect(res.job).to.eql(\"Senior QA Engineer\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-647a6131-2c15-493d-98cb-116c9c203066",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Ewin Updated\",\r\n  \"job\": \"Senior QA Engineer\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50742f89-b0f0-452e-a489-db892515a891",
						"exec": [
							"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204));\r",
							"pm.test(\"Status message is No Content\", () => pm.response.to.have.status(\"No Content\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-2fbbb69e-77f9-47b3-a199-6815de985c87",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register User Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d01adf6b-4ac0-4e7f-86bb-4c3b97309cac",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response contains token\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res).to.have.property(\"token\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-26b4d0f0-950e-444d-84ee-a85a3fcdae91",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"eve.holt@reqres.in\",\r\n  \"password\": \"pistol\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register User Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "feb5f799-7f98-4e41-a4f6-0dfe4dfd569f",
						"exec": [
							"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));\r",
							"pm.test(\"Error message displayed\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"id": "48849938-9f8ceae9-216f-4da5-8b98-9e7b625c4405",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"eve.holt@reqres.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "header",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{api_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2464287c-f0b1-4eeb-a5fe-449e8af1ad73",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					"pm.request.headers.add({\r",
					"    key: \"x-api-key\",\r",
					"    value: pm.environment.get(\"api_key\") || \"reqres-free-v1\"\r",
					"});\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ca1c785d-d6fa-4890-a260-9e87db0466fa",
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "",
			"description": "https://reqres.in/api"
		},
		{
			"key": "user_id",
			"value": "",
			"description": "Used in GET/PUT/PATCH/DELETE"
		},
		{
			"key": "name",
			"value": "",
			"description": "Used for POST/PUT/PATCH"
		},
		{
			"key": "job",
			"value": "",
			"description": "Used for POST/PUT/PATCH"
		},
		{
			"key": "api_key",
			"value": ""
		}
	]
}